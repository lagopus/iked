#!/bin/sh

IPSEC_DIR="@IPSEC_DIR@"
IPSEC_ETC_DIR="${IPSEC_DIR}/etc"
IPSEC_LIB_DIR="${IPSEC_DIR}/lib"
VRF_DIR="${IPSEC_DIR}"
NS_DIR="${IPSEC_ETC_DIR}/ns"
EXEC_CMD="ipsec"

error() {
	echo "$@" 1>&2
}

usage() {
	error "usage: $0 start|stop"
	error "       $0 -h"
	error "         print this message."
}

mount_bind() {
	ns_point=$1
	vrf_dir=$2
	dest_dir=$3

	mnt=$(findmnt -P "${NS_DIR}")
	if [ -z "${mnt}" ]; then
		mount --bind "${NS_DIR}" "${NS_DIR}" || exit 1
		mount --make-private "${NS_DIR}" || exit 1
	fi

	unshare --mount="${ns_point}" mount --bind "${vrf_dir}" "${dest_dir}" || exit 1
}

start() {
	if [ ! -d "${NS_DIR}" ]; then
		mkdir -p "${NS_DIR}" || exit 1
	fi
	vrf_dirs=$(find "${VRF_DIR}" -maxdepth 1 -type d -name \*vrf\*)
	for vrf_dir in ${vrf_dirs}
	do
		vrf=$(basename "${vrf_dir}")
		ns_file="${NS_DIR}/${vrf}"
		touch "${ns_file}" || exit 1
		mount_bind  "${ns_file}" "${vrf_dir}" "${IPSEC_ETC_DIR}"
		nsenter --mount="${ns_file}" sh -c "VRF=${vrf} LD_PRELOAD=${IPSEC_LIB_DIR}/vrf_socket.so ${EXEC_CMD} start"
	done
}

statusall() {
	if [ ! -d "${NS_DIR}" ]; then
		return 0
	fi
	ns_files=$(find "${NS_DIR}" -maxdepth 1 -type f)
	if [ -z "${ns_files}" ]; then
		return 0
	fi
	for ns_file in ${ns_files}
	do
		if [ ! -w "${ns_file}" ]; then
			basename "${ns_file}"
			nsenter --mount="${ns_file}" "${EXEC_CMD}" statusall
		fi
	done

}

stop() {
	if [ ! -d "${NS_DIR}" ]; then
		return 0
	fi
	ns_files=$(find "${NS_DIR}" -maxdepth 1 -type f)
	if [ -z "${ns_files}" ]; then
		return 0
	fi
	for ns_file in ${ns_files}
	do
		if [ ! -w "${ns_file}" ]; then
			nsenter --mount="${ns_file}" "${EXEC_CMD}" stop
			umount "${ns_file}" || exit 1
		fi
		rm -f "${ns_file}" || exit 1
	done

}

if [ ! -d "${IPSEC_DIR}" ]; then
	error "directory not found: ${IPSEC_DIR}"
	exit 1
fi

case $1 in
	start) start; exit 0;;
	statusall) statusall; exit 0;;
	restart) stop; start; exit 0;;
	stop) stop; exit 0;;
	-h|*) usage; exit 0;;
esac
